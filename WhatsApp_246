# Import necessary modules
import uiautomator2 as ui2
import time
import subprocess

# Device serial number of the receiver device
receiver_device_serial = "192.168.2.104:5555"

# Create a Device object for the sender device
sender_device = ui2.Device('cf611ff9')

# Create a Device object for the receiver device
receiver_device = ui2.Device(receiver_device_serial)

# ADB commands to turn on the receiver and sender devices' screens
receiver_turn_on_command = ['adb', '-s', receiver_device_serial, 'shell', 'input', 'keyevent', '224']
sender_turn_on_command = ['adb', '-s', 'cf611ff9', 'shell', 'input', 'keyevent', '224']

# ADB commands to turn off the receiver and sender devices' screens
receiver_turn_off_command = ['adb', '-s', receiver_device_serial, 'shell', 'input', 'keyevent', '26']
sender_turn_off_command = ['adb', '-s', 'cf611ff9', 'shell', 'input', 'keyevent', '26']

# Package name and activity name of WhatsApp
whatsapp_package_name = "com.whatsapp"
whatsapp_activity_name = "com.whatsapp.Main"

# Start WhatsApp using the package name and activity name
receiver_device.app_start(whatsapp_package_name, whatsapp_activity_name)
time.sleep(2)
receiver_device(resourceId="com.whatsapp:id/fabText").click()
time.sleep(2)
receiver_device(resourceId="com.whatsapp:id/menuitem_search").click()
time.sleep(2)
receiver_device(resourceId="com.whatsapp:id/search_src_text").set_text("Shubham")
time.sleep(2)
receiver_device(resourceId="com.whatsapp:id/contactpicker_row_name", text="Shubham pal Singh").click()
time.sleep(2)
receiver_device(resourceId="com.whatsapp:id/entry").set_text("hello this is shubham pal singh")
time.sleep(2)
receiver_device(resourceId="com.whatsapp:id/conversation_entry_action_button").click()
time.sleep(2)
receiver_device(resourceId="com.whatsapp:id/camera_btn").click()
time.sleep(2)
receiver_device(text="Video").click()
time.sleep(2)
receiver_device(resourceId="com.whatsapp:id/recording_progress").click()
time.sleep(60)
receiver_device(resourceId="com.whatsapp:id/recording_progress").click()
time.sleep(2)
receiver_device(resourceId="com.whatsapp:id/send").click()
time.sleep(2)
# Parse the output to extract the battery percentage
battery_info = result.stdout.splitlines()
battery_percentage = None
for line in battery_info:
    if 'level' in line:
        battery_percentage = line.split(':')[1].strip()

# Print the battery percentage
print("Battery Percentage at start of alarm:", battery_percentage)

# Get the current app package and activity
current_app = d.current_app()
# Get the current time
current_time = datetime.now()

# Calculate the alarm time (5 minutes from the current time)
alarm_time = current_time + timedelta(minutes=5)
print(alarm_time)

# Extract the hour and minute from the alarm time
hour = str(alarm_time.hour)
minute = str(alarm_time.minute)

# Open the Clock app
receiver_device.press("home")
receiver_device(scrollable=True).scroll.toEnd()
time.sleep(2)
receiver_device(resourceId="com.android.launcher3:id/icon", text="Clock").click()
# Set the alarm time
receiver_device(resourceId="com.google.android.deskclock:id/fab").click()
time.sleep(2)

# Locate the text box for entering the hour value and click on it
receiver_device.xpath('//*[@resource-id="com.google.android.deskclock:id/material_hour_text_input"]/android.widget.LinearLayout[1]/android.widget.FrameLayout[1]')
text_box1 = receiver_device.xpath('//*[@resource-id="com.google.android.deskclock:id/material_hour_text_input"]/android.widget.LinearLayout[1]/android.widget.FrameLayout[1]')
if text_box1.exists:
    receiver_device.click(0.437, 0.911)
    receiver_device.send_keys(hour)
    
time.sleep(2)
receiver_device.xpath('//*[@resource-id="com.google.android.deskclock:id/material_minute_text_input"]/android.widget.LinearLayout[1]/android.widget.FrameLayout[1]').click()
text_box2 = receiver_device.xpath('//*[@resource-id="com.google.android.deskclock:id/material_minute_text_input"]/android.widget.LinearLayout[1]/android.widget.FrameLayout[1]')
if text_box2.exists:
    receiver_device.click(0.437, 0.911)
    receiver_device.send_keys(minute)

receiver_device(text="OK").click()
time.sleep(2)
receiver_device(resourceId="com.android.systemui:id/center_group").click()
time.sleep(300)
num_runs = 5  # Stop the alarm after 5 seconds (adjust as needed)
for run in range(num_runs):
    time.sleep(1)
    if receiver_device(text="Alarm").exists():
        receiver_device(text="STOP").click()

print("Alarm stopped")

# Get the battery percentage at the end
result = subprocess.run(['adb', '-s', '172.16.49.61:5555', 'shell', 'dumpsys', 'battery'],
                        capture_output=True, text=True)
battery_info = result.stdout.splitlines()
battery_percentage_end = None
for line in battery_info:
    if 'level' in line:
        battery_percentage_end = line.split(':')[1].strip()

# Print the battery percentage at the end
print("Battery Percentage at end of Alarm:", battery_percentage_end)
